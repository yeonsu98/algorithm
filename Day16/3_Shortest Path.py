# 다익스트라 최단 경로 알고리즘
# - 특정 노드에서 목적지까지 최단 경로를 구하는 알고리즘
# - 단, '음의 간선'이 없을 때만 가능

# 알고리즘 순서)
# 1. 출발 노드를 정한다
# 2. 최단 거리 테이블(= DP-Table) 초기화
# 3. 방문하지 않는 노드 중 비용이 가장 짧은 노드를 선택 후 이동
# 4. 이동 후 해당 노드를 거쳐 다른 노드로 가는 비용을 계산 후 DP 갱신
# 5. 3 ~ 4를 반복

'''
# 방문 = [1, 0, 0, 0, 0, 0]

1. 먼저 DP를 무한으로 모두 초기화
[1, 2, 3, 4, 5, 6]
[F, F, F, F, F, F] # F = 무한

2. 처음 방문할 1은 0으로 지정한다
[1, 2, 3, 4, 5, 6]
[0, F, F, F, F, F]

3. 1에서 다음 노드로 가는 비용을 계산 후 DP 반영
[1, 2, 3, 4, 5, 6]
[0, 2, 5, 1, F, F]

4. 방문하지 않은 노드 중 비용이 가장 짧은 노드로 이동 => 4노드

5. 이동한 노드에서 다음 방문하지 않은 노드까지의 거리를 계산
4노드 -> 3노드 (1 + 3 => 4)
4노드 -> 5노드 (1 + 1 => 2)

계산 후 얻어진 비용을 기존 DP와 비교 후 최소 비용으로 갱신
[1, 2, 3, 4, 5, 6]
[0, 2, 4, 1, 2, F]

6. 또, 방문하지 않은 노드 중 비용이 가장 짧은 노드로 이동
- 2노드와 5노드가 2로 비용이 같은데 보통 앞의 번호를 먼저 방문
- 사실, 순서에 크게 관계 없음

또 최소 비용을 갱신
[1, 2, 3, 4, 5, 6]
[0, 2, 4, 1, 2, F]

7. 방문하지 않았으며 최소 비용인 5노드 방문
5노드 -> 3노드 (2+1=>3)
5 -> 6 (2 + 2 => 4)
[1, 2, 3, 4, 5, 6]
[0, 2, 4, 1, 2, F]


'''